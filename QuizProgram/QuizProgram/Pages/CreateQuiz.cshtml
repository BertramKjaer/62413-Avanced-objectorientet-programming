@page
@model QuizProgram.Pages.CreateQuizModel

<h2>Create New Quiz</h2>

<form method="post">
    <div class="form-group quiz-name">
        <label asp-for="Input.Title">Quiz Name</label>
        <input asp-for="Input.Title" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Input.CourseId">Course ID</label>
        <input asp-for="Input.CourseId" class="form-control" />
        <span asp-validation-for="Input.CourseId" class="text-danger"></span>
    </div>

    <div class="quiz-section">
        @for (int i = 0; i < Model.Input.Questions.Count; i++)
        {
            <div class="question-block">
                <div class="form-group">
                    <label asp-for="Input.Questions[i].QuizQuestion">Question @(i + 1)</label>
                    <input asp-for="Input.Questions[i].QuizQuestion" class="form-control" />
                </div>

                <div class="form-group">
                    <label asp-for="Input.Questions[i].CorrectAnswer">Correct Answer</label>
                    <input asp-for="Input.Questions[i].CorrectAnswer" class="form-control" />
                </div>

                @for (int j = 0; j < 3; j++)
                {
                    <div class="form-group">
                        <label asp-for="Input.Questions[i].IncorrectAnswers[j]">Incorrect Answer @(j + 1)</label>
                        <input asp-for="Input.Questions[i].IncorrectAnswers[j]" class="form-control" />
                    </div>
                }
            </div>
        }
    </div>

    <button type="button" id="addQuestion" class="btn btn-default">Add Another Question</button>
    <button type="button" id="removeLastQuestion" class="btn btn-danger">Remove Last Question</button>
    <button type="submit" class="btn btn-primary">Create Quiz</button>
</form>

<style>
    .quiz-section {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
    }

    .form-group.quiz-name {
        max-width: 600px; /* Adjust this as needed */
        margin: 0 auto 20px auto; /* Center the quiz name input and add some bottom margin */
    }

    .question-block {
        background: #f3f3f3;
        padding: 15px;
        border-radius: 8px;
    }

    .form-group {
        margin-bottom: 10px;
    }

        .form-group label {
            display: block;
        }

    .form-control {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .btn-default {
        background-color: #e7e7e7;
        color: black;
        margin-right: 8px;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn {
        padding: 8px 16px;
        border: none;
        cursor: pointer;
        border-radius: 4px;
    }

    .btn:hover {
        opacity: 0.8;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

</style>

@section Scripts {
    <script>
        function addNewQuestion() {
            var questionCount = document.querySelectorAll('.question-block').length;
            var newQuestionBlock = `
                        <div class="question-block">
                            <div class="form-group">
                                <label>Question ${questionCount + 1}</label>
                                <input type="text" name="Input.Questions[${questionCount}].QuizQuestion" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label>Correct Answer</label>
                                <input type="text" name="Input.Questions[${questionCount}].CorrectAnswer" class="form-control" />
                            </div>`;

            for (var i = 0; i < 3; i++) {
                newQuestionBlock += `
                            <div class="form-group">
                                <label>Incorrect Answer ${i + 1}</label>
                                <input type="text" name="Input.Questions[${questionCount}].IncorrectAnswers[${i}]" class="form-control" />
                            </div>`;
            }

            newQuestionBlock += `</div>`;
            document.querySelector('.quiz-section').insertAdjacentHTML('beforeend', newQuestionBlock);
        }

        function removeLastQuestion() {
            var questionBlocks = document.querySelectorAll('.question-block');
            if (questionBlocks.length > 1) {
                questionBlocks[questionBlocks.length - 1].remove();
            }
        }

        document.getElementById('addQuestion').addEventListener('click', addNewQuestion);
        document.getElementById('removeLastQuestion').addEventListener('click', removeLastQuestion);

        // Debugging form submission
        document.querySelector('form').addEventListener('submit', function (event) {
            console.log('Form is attempting to submit.');
            // Uncomment the next line to see if any default behavior is being prevented
            // event.preventDefault();
        });

        // TempData success message
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                window.addEventListener('DOMContentLoaded', (event) => {
                    alert("@TempData["SuccessMessage"]");
                });
            </text>
        }

            // TempData error message
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                window.addEventListener('DOMContentLoaded', (event) => {
                    alert("@TempData["ErrorMessage"]");
                });
            </text>
        }
    </script>
}
